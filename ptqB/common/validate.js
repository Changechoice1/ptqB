// 正则验证表达式
module.exports = {
  // 身份证号码
  id: {
    exp: {
      test(_val) {
        var city = {
          11: "北京",
          12: "天津",
          13: "河北",
          14: "山西",
          15: "内蒙古",
          21: "辽宁",
          22: "吉林",
          23: "黑龙江 ",
          31: "上海",
          32: "江苏",
          33: "浙江",
          34: "安徽",
          35: "福建",
          36: "江西",
          37: "山东",
          41: "河南",
          42: "湖北 ",
          43: "湖南",
          44: "广东",
          45: "广西",
          46: "海南",
          50: "重庆",
          51: "四川",
          52: "贵州",
          53: "云南",
          54: "西藏 ",
          61: "陕西",
          62: "甘肃",
          63: "青海",
          64: "宁夏",
          65: "新疆",
          71: "台湾",
          81: "香港",
          82: "澳门",
          91: "国外 "
        };
        var tip = ''; 
        var pass = true;
        if (!_val || !/(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/.test(_val)) {
          tip = "身份证号格式错误";
          pass = false;
        } else if (!city[_val.substr(0, 2)]) {
          tip = "地址编码错误";
          pass = false;
        } else {
          //18位身份证需要验证最后一位校验位
          if (_val.length == 18) {
            _val = _val.split('');
            //∑(ai×Wi)(mod 11)
            //加权因子
            var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];
            //校验位
            var parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2];
            var sum = 0;
            var ai = 0;
            var wi = 0;
            for (var i = 0; i < 17; i++) {
              ai = _val[i];
              wi = factor[i];
              sum += ai * wi;
            }
            var last = parity[sum % 11];
            if (parity[sum % 11] != _val[17]) {
              tip = "校验位错误";
              pass = false;
            }
          }
        }
        return pass;
      }
    },
    err: "身份证号码格式错误"
  },
  // 手机号码
  phone: {
    // exp: /^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$/,
    exp: /^1[0-9]{10}$/,
    err: "手机号格式错误"
  },
  // 电话：固话或手机号
  contactNumber: {
    exp: /(^(\d{3,4}-)?(\d{7,8})$)|(^1[0-9]{10}$)/,
    err: "联系方式格式错误"
  },
  // 验证码
  regCode: {
    exp: /^\d{6}$/,
    err: "验证码格式错误"
  },
  // 整数
  int: {
    exp: /^-?\d+$/,
    err: "数字格式错误"
  },
  // 非负整数
  nonnegativeInt: {
    exp: /^\d+$/,
    err: "数字格式错误"
  },
  // 正整数
  positiveInt: {
    exp: /^[1-9]*[1-9][0-9]*$/,
    err: "数字格式错误"
  },
  // 价格：大于等于0
  price: {
    exp: /^([1-9][\d]{0,7}|0)(\.[\d]{1,2})?$/,
    err: "金额格式错误"
  },
  // 价格：大于0
  price1: {
    exp: /^(?!(0[0-9]{0,}$))[0-9]{1,}[.]{0,1}[0-9]{0,2}$/,
    err: "金额格式错误"
  },
  // 真实姓名
  realname: {
    exp: /^[a-zA-Z\u4E00-\u9FA5\uf900-\ufa2d·s]{2,20}$/,
    err: "姓名格式错误"
  },
  // 判空，可为0
  empty1: {
    exp: {
      test(_val) {
        if (_val == 'undefined' || _val == '' || _val == null) {
          if (_val === 0) {
            return /\S/.test(_val);
          } else {
            return false;
          }
        }
        return /\S/.test(_val);
      }
    },
    err: "请填写内容"
  },
  // 字符
  character: {
    exp: /^[A-Za-z0-9\u4E00-\u9FA5\uf900-\ufa2d，\,。\.；;？\?：:、“”"‘’'><\+\-\*\/（）\(\){}【】\[\]%#！\|&￥\$]+$/,
    err: "请填写正确格式内容"
  }
}